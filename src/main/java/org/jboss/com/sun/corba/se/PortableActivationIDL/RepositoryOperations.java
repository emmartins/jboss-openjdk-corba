package org.jboss.com.sun.corba.se.PortableActivationIDL;


/**
* org.jboss.com.sun.corba/se/PortableActivationIDL/RepositoryOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../../../src/share/classes/org.jboss.com.sun.corba/se/PortableActivationIDL/activation.idl
* Monday, November 5, 2012 3:44:56 AM WET
*/

public interface RepositoryOperations 
{

  /** register server definition.
  	* This returns the serverId of the server.  A newly created server is
  	* always uninstalled.
  	*/
  String registerServer (org.jboss.com.sun.corba.se.PortableActivationIDL.RepositoryPackage.ServerDef serverDef) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerAlreadyRegistered, org.jboss.com.sun.corba.se.PortableActivationIDL.BadServerDefinition;

  /** unregister server definition
  	*/
  void unregisterServer (String serverId) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered;

  /** get server definition
  	*/
  org.jboss.com.sun.corba.se.PortableActivationIDL.RepositoryPackage.ServerDef getServer (String serverId) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered;

  /** Return whether the server has been installed
  	*/
  boolean isInstalled (String serverId) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered;

  /** Mark the server as being installed.  Raises ServerAlreadyInstalled
  	* if the server is currently marked as installed.
  	*/
  void install (String serverId) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered, org.jboss.com.sun.corba.se.PortableActivationIDL.ServerAlreadyInstalled;

  /** Mark the server as being uninstalled.  Raises ServerAlreadyUninstalled
  	* if the server is currently marked as uninstalled.
  	*/
  void uninstall (String serverId) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered, org.jboss.com.sun.corba.se.PortableActivationIDL.ServerAlreadyUninstalled;

  /** list registered servers
  	*/
  String[] listRegisteredServers ();

  /** Returns list of ALL applicationNames defined in ServerDefs of registered 
  	* servers.
  	*/
  String[] getApplicationNames ();

  /** Find the ServerID associated with the given application name.
  	*/
  String getServerID (String applicationName) throws org.jboss.com.sun.corba.se.PortableActivationIDL.ServerNotRegistered;
} // interface RepositoryOperations
